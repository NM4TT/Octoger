CREATE TABLE type (
id INT PRIMARY KEY AUTO_INCREMENT,
identifier VARCHAR(5) UNIQUE NOT NULL,
description VARCHAR(255) NOT NULL
);

CREATE TABLE user (
id INT PRIMARY KEY AUTO_INCREMENT,
personal_identifier VARCHAR(255),
name VARCHAR(255) NOT NULL,
lastname VARCHAR(255) NOT NULL,
type VARCHAR(5) NOT NULL,
FOREIGN KEY (type) REFERENCES type(identifier) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE crud_log (
id INT PRIMARY KEY AUTO_INCREMENT,
table_name VARCHAR(255) NOT NULL,
date_created TIMESTAMP NOT NULL,
field_name VARCHAR(255) NOT NULL,
record VARCHAR(255) NOT NULL,
old_value VARCHAR(255),
new_value VARCHAR(255),
type VARCHAR(5) NOT NULL,
FOREIGN KEY (type) REFERENCES type(identifier) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE credential (
id INT PRIMARY KEY AUTO_INCREMENT,
user_id INT NOT NULL,
username VARCHAR(6) NOT NULL,
password VARCHAR(255) NOT NULL,
FOREIGN KEY (user_id) REFERENCES user(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE product_collection (
id INT PRIMARY KEY AUTO_INCREMENT,
responsible_id INT NOT NULL,
provider VARCHAR(255),
cost DECIMAL(10,2) NOT NULL,
description VARCHAR(255),
product_quantity INT NOT NULL
);

CREATE TABLE product (
id INT PRIMARY KEY AUTO_INCREMENT,
collection_id INT NOT NULL,
price DECIMAL(10,2) NOT NULL,
benefit DECIMAL(10,2) NOT NULL,
is_available BOOLEAN NOT NULL,
FOREIGN KEY (collection_id) REFERENCES product_collection(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE sell (
id INT PRIMARY KEY AUTO_INCREMENT,
date_created TIMESTAMP NOT NULL,
collection_id INT NOT NULL,
responsible_id INT NOT NULL,
FOREIGN KEY (collection_id) REFERENCES product_collection(id) ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (responsible_id) REFERENCES user(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE transaction (
id INT PRIMARY KEY AUTO_INCREMENT,
type VARCHAR(5) NOT NULL,
value DECIMAL(10,2),
date_created TIMESTAMP NOT NULL
);

CREATE TABLE product_operation (
id INT PRIMARY KEY AUTO_INCREMENT,
type VARCHAR(5) NOT NULL,
collection_id INT NOT NULL,
product_amount INT NOT NULL,
date_created TIMESTAMP NOT NULL,
responsible_id INT NOT NULL,
transaction_id INT NOT NULL,
FOREIGN KEY (type) REFERENCES type(identifier) ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (collection_id) REFERENCES product_collection(id) ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (responsible_id) REFERENCES user(id) ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (transaction_id) REFERENCES transaction(id) ON UPDATE CASCADE ON DELETE CASCADE
);